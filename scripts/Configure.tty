# Copyright (C) 2000 by Massimiliano Ghilardi
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
#

# TOP_SRCDIR
T="$1"

# TOP_BUILDDIR
B="$2"

if test -z "$BASH"; then
  echo 'WARNING: $BASH environment variable is not set. This script'
  echo '(scripts/Configure.tty) requires bash, so it will probably fail.'
  echo 'If it fails, check that you have bash correctly installed.'
fi

function yesno() {
    ANS=
    eval "VAL=\${$1}"
    eval "HELP=\${${1}_HELP}"
    
    if test "$VAL" = "y" -o "$VAL" = "m"; then
	PROMPT="[Y/n]"
	VAL="y"
    else
	PROMPT="[y/N]"
	VAL="n"
    fi
    
    while test "$ANS" != "y" -a "$ANS" != "n"
    do
	echo -n "$HELP $PROMPT ? "
	read ANS
	case "$ANS" in
	    "" ) ANS="$VAL";;
	    [yY] | [Yy]es | YES ) ANS="y";;
	    [nN] | [Nn]o  | NO  ) ANS="n";;
	esac
    done
    eval "$1"="$ANS"
}

function yesno_dep() {
   eval "DEP=\${$2}"
   if test "$DEP" != n; then
      yesno "$1"
   fi
}

function yesmodno() {
   if [ $CONF__MODULES = n ]; then
      yesno "$1"
   else
      ANS=
      eval "VAL=\${$1}"
      eval "HELP=\${${1}_HELP}"
    
      if test "$VAL" = "y"; then
	  PROMPT="[Y/m/n]"
      elif test "$VAL" = "m"; then
	  PROMPT="[y/M/n]"
      else
	  PROMPT="[y/m/N]"
	  VAL="n"
      fi
    
      while test "$ANS" != "y" -a "$ANS" != "m" -a "$ANS" != "n"
      do
	  echo -n "$HELP $PROMPT ? "
	  read ANS
	  case "$ANS" in
	      "" ) ANS="$VAL";;
	      [yY] | [Yy]es | YES ) ANS="y";;
	      [mM] | [Mm]od | MOD ) ANS="m";;
	      [nN] | [Nn]o  | NO  ) ANS="n";;
	  esac
      done
      eval "$1=$ANS"
   fi
}

function yesmodno_dep() {
   eval "DEP=\${$2}"
   if test "$DEP" != n; then
      yesmodno "$1"
   fi
}

function yesno_truedep() {
   eval "DEP=\${$2}"
   if test "$DEP" != n; then
      yesno "$1"
   else
      eval "$1=n"
   fi
   
}

function yesmodno_truedep() {
   eval "DEP=\${$2}"
   if test "$DEP" != n; then
      yesmodno "$1"
   else
      eval "$1=n"
   fi
   
}

function msg() {
   echo "# $1"
}
   
function menu() {
   eval "echo -e '#\n#' \${${1}_MENU}'\n#'"
}

function endmenu() {
   :
}

function dump() {
   eval "echo $1=\${$1}"
}

echo "#"
echo "# Twin configuration utility"
echo "#"

. "$T"conf/conf.default
if [ -f "$B"conf/conf.current ]; then
   . "$B"conf/conf.current
   if [ -f "$B"conf/conf.auto -a "$B"conf/conf.auto -nt "$B"conf/conf.current ]; then
      . "$B"conf/conf.auto
      echo "# Using configuration generated by 'configure' saved in conf.auto"
   else
      echo "# Using manual configuration saved in conf.current"
   fi
elif [ -f "$B"conf/conf.auto ]; then
   . "$B"conf/conf.auto
   echo "# Using configuration generated by 'configure' saved in conf.auto"
else
   echo "# Using default configuration from conf.default"
fi

. "$T"conf/conf.base

cat > "$B"conf/conf.current <<EOF
#
# This file holds the current configuration.
# It was created by 'make config', do not edit!
#
# Configuration:
#
EOF

for i in `cat "$T"conf/conf.list`; do
    dump $i
done >>"$B"conf/conf.current

