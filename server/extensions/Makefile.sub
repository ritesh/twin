#
# Makefile for twin extensions
#
#

SUBDIRS=

#
# where to install modules (relative to $(libdir))
#
INSTALLSUBDIR=/twin/modules/extensions

include $(T)include/version.in
-include $(B)makeautoconf

BASEOBJS=ext_query.o
TTOBJS=ext_TT.o
TTOBJS-L=ext_TT.lo
ALLOBJS:=$(BASEOBJS) $(TTOBJS) $(TTOBJS-L)

OBJS_ext.lst=$(BASEOBJS)
OBJS_ext_TT.la=$(TTOBJS-L)

BINS=
MODS=
SHLIBS=
ARLIBS=
CLLIBS=ext.lst


CC_FLAGS+=-I$(S)..

CC_FLAGS.lo+=-DTHIS_MODULE

LD_FLAGS_ext_TT.la=$(LD_LIBTT) 

#
# target
#
all: build-all

#
# read configuration
#
-include $(B)conf/conf.current
-include .modules
-include .depend
-include $(B).hdepend

#
# set variables according conf.current
# and group together all *.o objects needed by each binary
#

ifeq ($(CONF__ALLOC),y)
  CC_FLAGS+=-DCONF__ALLOC
endif

#ifeq ($(CONF__UNICODE),y)
#  LD_FLAGS+=$(LD_LIBTUTF)
#endif

ifeq ($(CONF_EXT_TT),y)
  OBJS_ext.lst+=$(TTOBJS)
else
  ifeq ($(CONF_EXT_TT),m)
    MODS+=ext_TT.la
  endif
endif

#
# common rules
#
include $(T)makerules.in

#
# All done. Now just set a few special targets
#

build-all: $(BINS) $(MODS) $(SHLIBS) $(ARLIBS) $(CLLIBS)

modules: $(MODS)


install-dir:
	$(INSTALL-DIR) $(DESTDIR)$(libdir)$(INSTALLSUBDIR)

install: install-dir $(foreach M,$(MODS),install-mod-$(M))



uninstall-dir:
	rmdir $(DESTDIR)$(libdir)$(INSTALLSUBDIR) || true

uninstall: $(foreach M,$(MODS),uninstall-mod-$(M)) uninstall-dir


clean:
	rm -f .*.flags .*.bin .*.mod .*.arlib .*.cllib *.lst *.o *.lo *.la *.so *.so.* ; \
	rm -fr .libs
