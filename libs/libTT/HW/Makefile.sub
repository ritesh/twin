#
# Makefile for various libTT display targets
#


#
# where to install modules (relative to $(libdir))
#
INSTALLSUBDIR=/TT/modules/HW

SUBDIRS=

include $(T)include/TT/version.in
-include $(B)makeautoconf

all: build-all

BINS=
SHLIBS=
ARLIBS=
CLLIBS=hw.lst

ALLBINS=$(BINS) $(MODS) $(SHLIBS) $(ARLIBS) $(CLLIBS)
ALLBINS_FULL=hw.lst hw_l.lst twin.la twin_tunnel.la twin_detunnel.la gtk.la X11.la xml.la

HW_OBJS=null_m4.o
HW_OBJS_L=null_m4.lo

XML_OBJS=xml_m4.o
X11_OBJS=X11_m4.o
GTK_OBJS=gtk_m4.o
TWIN_OBJS=twin_m4.o
TWIN_TUNNEL_OBJS=twin_tunnel_m4.o
TWIN_DETUNNEL_OBJS=twin_detunnel_m4.o
XML_OBJS_L=xml_m4.lo
X11_OBJS_L=X11_m4.lo
GTK_OBJS_L=gtk_m4.lo
TWIN_OBJS_L=twin_m4.lo
TWIN_TUNNEL_OBJS_L=twin_tunnel_m4.lo
TWIN_DETUNNEL_OBJS_L=twin_detunnel_m4.lo

OBJS_hw.lst=$(HW_OBJS)
OBJS_hw_l.lst=$(HW_OBJS_L)
OBJS_xml.la=$(XML_OBJS_L)
OBJS_X11.la=$(X11_OBJS_L)
OBJS_gtk.la=$(GTK_OBJS_L)
OBJS_twin.la=$(TWIN_OBJS_L)
OBJS_twin_tunnel.la=$(TWIN_TUNNEL_OBJS_L)
OBJS_twin_detunnel.la=$(TWIN_DETUNNEL_OBJS_L)
OBJS_twin_detunnel.lst=$(TWIN_DETUNNEL_OBJS)

ALLOBJS=$(HW_OBJS) $(HW_OBJS_L) $(XML_OBJS) $(XML_OBJS_L) \
	$(X11_OBJS) $(X11_OBJS_L) $(GTK_OBJS) $(GTK_OBJS_L) \
	$(TWIN_OBJS) $(TWIN_OBJS_L) $(TWIN_TUNNEL_OBJS) $(TWIN_TUNNEL_OBJS_L) \
	$(TWIN_DETUNNEL_OBJS) $(TWIN_DETUNNEL_OBJS_L)

CC_FLAGS+=-I$(S).. -D_REENTRANT

# also used for X11_m4.lo
CC_FLAGS_X11_m4.o+=$(CF_HEADERX11)
LD_FLAGS_X11.la=$(LD_LIBX11)

# also used for xml_m4.lo
CC_FLAGS_xml_m4.o+=$(CF_HEADERXML)
LD_FLAGS_xml.la=$(LD_LIBXML)

# also used for gtk_m4.lo
CC_FLAGS_gtk_m4.o+=$(CF_HEADERGTK)
LD_FLAGS_gtk.la=$(LD_LIBGTK)

#
LD_FLAGS_twin.la=$(LD_LIBTW)
LD_FLAGS_twin_tunnel.la=$(LD_LIBTW)
LD_FLAGS_twin_detunnel.la=$(LD_LIBTW)




-include $(B)conf/conf.current
-include .modules
-include .depend
-include $(B).hdepend

ifeq ($(CONF__SHLIBS),y)
  CLLIBS+=hw_l.lst
endif

#
# This is globally needed by all libTT sources
#
ifeq ($(CONF_SOCKET_PTHREADS),y)
  CC_FLAGS+=-DCONF_SOCKET_PTHREADS
endif

ifeq ($(CONF_TT_HW_TWIN),y)
  HW_OBJS+=$(TWIN_OBJS)
  HW_OBJS_L+=$(TWIN_OBJS_L)
else
  ifeq ($(CONF_TT_HW_TWIN),m)
    MODS+=twin.la
    CC_FLAGS_twin_m4.o+=-DTHIS_MODULE
  endif
endif

ifeq ($(CONF_TT_HW_TWIN_TUNNEL),y)
  HW_OBJS+=$(TWIN_TUNNEL_OBJS)
  HW_OBJS_L+=$(TWIN_TUNNEL_OBJS_L)
else
  ifeq ($(CONF_TT_HW_TWIN_TUNNEL),m)
    MODS+=twin_tunnel.la
    CC_FLAGS_twin_tunnel_m4.o+=-DTHIS_MODULE
  endif
endif

#
# We cannot link twin_detunnel.o inside libTT since
# it references twin server symbols and would break
# *ALL* other libTT clients.
#
# So if CONF_TT_HW_TWIN_DETUNNEL is yes,
# we link it only in *twin server*
#
ifeq ($(CONF_TT_HW_TWIN_DETUNNEL),y)
  CLLIBS+=twin_detunnel.lst
else
  ifeq ($(CONF_TT_HW_TWIN_DETUNNEL),m)
    MODS+=twin_detunnel.la
    CC_FLAGS_twin_detunnel_m4.o+=-DTHIS_MODULE
  endif
endif

ifeq ($(CONF_TT_HW_GTK),y)
  HW_OBJS+=$(GTK_OBJS)
  HW_OBJS_L+=$(GTK_OBJS_L)
else
  ifeq ($(CONF_TT_HW_GTK),m)
    MODS+=gtk.la
    CC_FLAGS_gtk_m4.o+=-DTHIS_MODULE
  endif
endif

ifeq ($(CONF_TT_HW_X11),y)
  HW_OBJS+=$(X11_OBJS)
  HW_OBJS_L+=$(X11_OBJS_L)
else
  ifeq ($(CONF_TT_HW_X11),m)
    MODS+=X11.la
    CC_FLAGS_X11_m4.o+=-DTHIS_MODULE
  endif
endif

ifeq ($(CONF_TT_HW_XML),y)
  HW_OBJS+=$(XML_OBJS)
  HW_OBJS_L+=$(XML_OBJS_L)
else
  ifeq ($(CONF_TT_HW_XML),m)
    MODS+=xml.la
    CC_FLAGS_xml_m4.o+=-DTHIS_MODULE
  endif
endif


ifeq ($(CONF__MODULES),n)
  build-all:
	@rm -f $(filter-out $(ALLBINS), $(ALLBINS_FULL)) ; \
	 echo ; \
	 echo "You disabled \"Enable shared modules\", so only" ; \
	 echo "the built-in display targets $(CLLIBS) will be compiled!" ; \
	 echo
endif


#
# include the do-everything file.
# Must correctly set all CC_FLAGS* and LD_FLAGS* before including this!
#
include $(T)makerules.in

build-all: $(ALLBINS)


$(S)%_m4.c: $(S)m4/hw.m4 $(S)%_c $(wildcard $(S)m4/*.m4 $(T)include/m4/TT*.m4)
	$(M4) '-Dtarget=$*' -I$(T)include -I$(SS) $< > $@

$(S)twin_c $(wildcard $(S)twin_*_c): $(S)twin_h $(wildcard $(S)twin_*_h)
	@touch $@

$(S)twin_detunnel_c: $(T)include/socklist_m4.h


#
# All done. Now just set a few special targets
#

do-autogen: $(patsubst %_c,%_m4.c,$(wildcard *_c))

install-dir:
	$(INSTALL-DIR) $(DESTDIR)$(libdir)$(INSTALLSUBDIR)

install: install-dir $(foreach M,$(MODS),install-mod-$(M))


uninstall-dir:
	rmdir $(DESTDIR)$(libdir)$(INSTALLSUBDIR) || true
	rmdir $(DESTDIR)$(libdir)/TT/modules || true
	rmdir $(DESTDIR)$(libdir)/TT || true

uninstall: $(foreach M,$(MODS),uninstall-mod-$(M)) uninstall-dir

clean:
	rm -f .*.flags .*.mod .*.shlib .*.arlib .*.cllib *.lst *.la *.a *.o *.lo *.so *.so.* ; \
	rm -fr .libs


